.section .rodata
    .equ gpioa_crl, 0x40010800
    .equ gpioa_crh, 0x40010804
    //--------------------------------------------------------------------------------
    .equ gpioa_idr, 0x40010808  // input data regist
    //gpioa_idr	bits     pro bitov� adresov�n� brany, adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ aidr15, 0x4221013c // 15 nejvyssi bit, tedy pa_15, pro cteni bit-banding
    .equ aidr14, 0x42210138 // 14
    .equ aidr13, 0x42210134 // 13
    .equ aidr12, 0x42210130 // 12
    .equ aidr11, 0x4221012c // 11
    .equ aidr10, 0x42210128 // 10
    .equ aidr9, 0x42210124 // 9
    .equ aidr8, 0x42210120 // 8
    .equ aidr7, 0x4221011c // 7
    .equ aidr6, 0x42210118 // 6
    .equ aidr5, 0x42210114 // 5
    .equ aidr4, 0x42210110 // 4
    .equ aidr3, 0x4221010c // 3
    .equ aidr2, 0x42210108 // 2
    .equ aidr1, 0x42210104 // 1
    .equ aidr0, 0x42210100 // 0  nejnizsi bit, tedy pa_0, pro cteni bit-banding

     // --------------------------------------------------------------------------------
    .equ gpioa_odr, 0x4001080c  // output data registr
     // gpioa_odr	bits                         adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ aodr15, 0x422101bc // 15  nejvyssi bit, tedy pa_15, pro zapis bit-banding
    .equ aodr14, 0x422101b8 // 14
    .equ aodr13, 0x422101b4 // 13
    .equ aodr12, 0x422101b0 // 12
    .equ aodr11, 0x422101ac // 11
    .equ aodr10, 0x422101a8 // 10
    .equ aodr9, 0x422101a4 // 9
    .equ aodr8, 0x422101a0 // 8
    .equ aodr7, 0x4221019c // 7
    .equ aodr6, 0x42210198 // 6
    .equ aodr5, 0x42210194 // 5
    .equ aodr4, 0x42210190 // 4
    .equ aodr3, 0x4221018c // 3
    .equ aodr2, 0x42210188 // 2
    .equ aodr1, 0x42210184 // 1
    .equ aodr0, 0x42210180 // 0 nejnizsi bit, tedy pa_0, pro zapis bit-banding

     // --------------------------------------------------------------------------------
    .equ gpioa_bsrr, 0x40010810
     // --------------------------------------------------------------------------------
    .equ gpioa_brr, 0x40010814
     // --------------------------------------------------------------------------------
    .equ gpioa_lckr, 0x40010818
     // --------------------------------------------------------------------------------

     // ********************************************************************************
     // *   , gpioc,  	  	*
     // ********************************************************************************
     // gpioc registers
     // --------------------------------------------------------------------------------
    .equ gpioc_crl, 0x40011000
     // --------------------------------------------------------------------------------
    .equ gpioc_crh, 0x40011004
     // --------------------------------------------------------------------------------
    .equ gpioc_idr, 0x40011008  // input data regist
     // gpioc_idr	bits                        adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ cidr15, 0x4222013c // 15 nejvyssi bit, tedy pc_15, pro cteni bit-banding
    .equ cidr14, 0x42220138 // 14
    .equ cidr13, 0x42220134 // 13
    .equ cidr12, 0x42220130 // 12
    .equ cidr11, 0x4222012c // 11
    .equ cidr10, 0x42220128 // 10
    .equ cidr9, 0x42220124 // 9
    .equ cidr8, 0x42220120 // 8
    .equ cidr7, 0x4222011c // 7
    .equ cidr6, 0x42220118 // 6
    .equ cidr5, 0x42220114 // 5
    .equ cidr4, 0x42220110 // 4
    .equ cidr3, 0x4222010c // 3
    .equ cidr2, 0x42220108 // 2
    .equ cidr1, 0x42220104 // 1
    .equ cidr0, 0x42220100 // 0 nejnizsi bit, tedy pc_0, pro cteni bit-banding

     // --------------------------------------------------------------------------------
    .equ gpioc_odr, 0x4001100c  // output data registr
     // gpioc_odr	bits                         adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ codr15, 0x422201bc // 15 nejvyssi bit, tedy pc_15, pro zapis bit-banding
    .equ codr14, 0x422201b8 // 14
    .equ codr13, 0x422201b4 // 13
    .equ codr12, 0x422201b0 // 12
    .equ codr11, 0x422201ac // 11
    .equ codr10, 0x422201a8 // 10
    .equ codr9, 0x422201a4 // 9
    .equ codr8, 0x422201a0 // 8
    .equ codr7, 0x4222019c // 7
    .equ codr6, 0x42220198 // 6
    .equ codr5, 0x42220194 // 5
    .equ codr4, 0x42220190 // 4
    .equ codr3, 0x4222018c // 3
    .equ codr2, 0x42220188 // 2
    .equ codr1, 0x42220184 // 1
    .equ codr0, 0x42220180 // 0 nejnizsi bit, tedy pc_0, pro zapis bit-banding
     // --------------------------------------------------------------------------------
    .equ gpioc_bsrr, 0x40011010
     // --------------------------------------------------------------------------------
    .equ gpioc_brr, 0x40011014
     // --------------------------------------------------------------------------------
    .equ gpioc_lckr, 0x40011018
     // --------------------------------------------------------------------------------


     // ********************************************************************************
     // *   , gpiob,  	  	*
     // ********************************************************************************
     // gpiob registers
     // --------------------------------------------------------------------------------
    .equ gpiob_crl, 0x40010c00
     // --------------------------------------------------------------------------------
    .equ gpiob_crh, 0x40010c04
     // --------------------------------------------------------------------------------
    .equ gpiob_idr, 0x40010c08  // input data regist
     // gpiob_idr	bits                          adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ bidr15, 0x4221813c // 15  nejvyssi bit, tedy pb_15, pro cteni bit-banding
    .equ bidr14, 0x42218138 // 14
    .equ bidr13, 0x42218134 // 13
    .equ bidr12, 0x42218130 // 12
    .equ bidr11, 0x4221812c // 11
    .equ bidr10, 0x42218128 // 10
    .equ bidr9, 0x42218124 // 9
    .equ bidr8, 0x42218120 // 8
    .equ bidr7, 0x4221811c // 7
    .equ bidr6, 0x42218118 // 6
    .equ bidr5, 0x42218114 // 5
    .equ bidr4, 0x42218110 // 4
    .equ bidr3, 0x4221810c // 3
    .equ bidr2, 0x42218108 // 2
    .equ bidr1, 0x42218104 // 1
    .equ bidr0, 0x42218100 // 0 nejnizsi bit, tedy pb_0, pro cteni bit-banding

     // --------------------------------------------------------------------------------
    .equ gpiob_odr, 0x40010c0c  // output data registr
     // gpiob_odr	bits                        adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ bodr15, 0x422181bc // 15  nejvyssi bit, tedy pc_15, pro zapis bit-banding
    .equ bodr14, 0x422181b8 // 14
    .equ bodr13, 0x422181b4 // 13
    .equ bodr12, 0x422181b0 // 12
    .equ bodr11, 0x422181ac // 11
    .equ bodr10, 0x422181a8 // 10
    .equ bodr9, 0x422181a4 // 9
    .equ bodr8, 0x422181a0 // 8
    .equ bodr7, 0x4221819c // 7
    .equ bodr6, 0x42218198 // 6
    .equ bodr5, 0x42218194 // 5
    .equ bodr4, 0x42218190 // 4
    .equ bodr3, 0x4221818c // 3
    .equ bodr2, 0x42218188 // 2
    .equ bodr1, 0x42218184 // 1
    .equ bodr0, 0x42218180 // 0 nejnizsi bit, tedy pb_0, pro zapis bit-banding
     // --------------------------------------------------------------------------------
    .equ gpiob_bsrr, 0x40010c10
     // --------------------------------------------------------------------------------
    .equ gpiob_brr, 0x40010c14
     // --------------------------------------------------------------------------------
    .equ gpiob_lckr, 0x40010c18
     // --------------------------------------------------------------------------------


     // ********************************************************************************
     // *   , rcc,  	  	*
     // ********************************************************************************
     // rcc registers
     // --------------------------------------------------------------------------------
    .equ rcc_cr	, 0x40021000 // clock control registr
     // rcc_cr bit                              adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ pllrdy, 0x42420064 // 25
    .equ pllon, 0x42420060 // 24
    .equ csson, 0x4242004c // 19
    .equ hsebyp, 0x42420048 // 18
    .equ hserdy, 0x42420044 // 17
    .equ hseon, 0x42420040 // 16
    .equ hsical, 0x42420020 // 8
    .equ hsitrim, 0x4242000c // 3
    .equ hsirdy, 0x42420004 // 1
    .equ hsion, 0x42420000 // 0
     // --------------------------------------------------------------------------------
    .equ rcc_cfgr, 0x40021004 // clock configuration registr
     // rcc_cfgr	bits                        adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ mco, 	0x424200e0 // 24
    .equ usbpre, 0x424200d8 // 22
    .equ pllmul, 0x424200c8 // 18
    .equ pllxtpre, 0x424200c4 // 17
    .equ pllsrc, 0x424200c0 // 16
    .equ adcpre, 0x424200b8 // 14
    .equ ppre2, 0x424200ac // 11
    .equ ppre1, 0x424200a0 // 8
    .equ hpre, 0x42420090 // 4
    .equ sws	, 0x42420088 // 2
    .equ sw, 	0x42420080 // 0
     // --------------------------------------------------------------------------------
    .equ rcc_cir, 0x40021008
     // rcc_cir	 bits                       adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding

    .equ lsirdyie, 0x42420120 // 8
    .equ cssf, 0x4242011c // 7
    .equ pllrdyf, 0x42420110 // 4
    .equ hserdyf, 0x4242010c // 3
    .equ hsirdyf, 0x42420108 // 2
    .equ lserdyf, 0x42420104 // 1
    .equ lsirdyf, 0x42420100 // 0
     // --------------------------------------------------------------------------------
    .equ rcc_apb2rstr, 0x4002100c
     // --------------------------------------------------------------------------------
    .equ rcc_apb1rstr , 0x40021010
     // --------------------------------------------------------------------------------
    .equ rcc_ahbenr , 0x40021014
     // --------------------------------------------------------------------------------
    .equ rcc_apb2enr, 0x40021018
     // rcc_apb2enr	bits                     adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ adc3en, 0x4242033c // 15
    .equ usrt1en, 0x42420338 // 14
    .equ tim8en, 0x42420334 // 13
    .equ spi1en, 0x42420330 // 12
    .equ tim1en, 0x4242032c // 11
    .equ adc2en, 0x42420328 // 10
    .equ adc1en, 0x42420324 // 9
    .equ iopgen, 0x42420320 // 8
    .equ iopfen, 0x4242031c // 7
    .equ iopeen, 0x42420318 // 6
    .equ iopden, 0x42420314 // 5
    .equ iopcen, 0x42420310 // 4
    .equ iopben, 0x4242030c // 3
    .equ iopaen, 0x42420308 // 2
    .equ afioen, 0x42420300 // 0
     // --------------------------------------------------------------------------------
    .equ rcc_apb1enr  , 0x4002101c
     // rcc_apb1enr	bits                     adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ dacen, 0x424203f4 // 29
    .equ pwren, 0x424203ec // 28
    .equ bkpen, 0x424203e8 // 27
    .equ canen, 0x424203e4 // 25
    .equ usben, 0x424203dc // 23
    .equ i2c2en, 0x424203d8 // 22
    .equ i2c1en, 0x424203d4 // 21
    .equ usart5en, 0x424203d0 // 20
    .equ usart4en, 0x424203cc // 19
    .equ usart3en, 0x424203c8 // 18
    .equ usart2en, 0x424203c4 // 17
    .equ spi3en, 0x424203bc // 15
    .equ spi2en, 0x424203b8 // 14
    .equ wwdgen, 0x424203ac // 11
    .equ tim7en, 0x42420394 // 5
    .equ tim6en, 0x42420390 // 4
    .equ tim5en, 0x4242038c // 3
    .equ tim4en, 0x42420388 // 2
    .equ tim3en, 0x42420384 // 1
    .equ tim2en, 0x42420380 // 0
     // --------------------------------------------------------------------------------
    .equ rcc_bdcr, 0x40021020
     // --------------------------------------------------------------------------------
    .equ rcc_csr 		 , 0x40021024
     // --------------------------------------------------------------------------------



     // ********************************************************************************
     // *   , afio,  	  	*
     // ********************************************************************************
     // afio registers
     // --------------------------------------------------------------------------------
    .equ afio_mapr,  	0x40010004
     // afio_mapr	bits                         adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ swj_cfg, 0x422000e0 // 24
    .equ adc2_etrgreg_remap, 0x422000d0 // 20
    .equ adc2_etrginj_remap, 0x422000cc // 19
    .equ adc1_etrgreg_remap, 0x422000c8 // 18
    .equ adc1_etrginj_remap, 0x422000c4 // 17
    .equ tim5ch4_iremap, 0x422000c0 // 16
    .equ pd01_remap, 0x422000bc // 15
    .equ can_remap, 0x422000b4 // 13
    .equ tim4_remap, 0x422000b0 // 12
    .equ tim3_remap, 0x422000a8 // 10
    .equ tim2_remap, 0x422000a0 // 8
    .equ tim1_remap, 0x42200098 // 6
    .equ usart3_remap, 0x42200090 // 4
    .equ usart2_remap, 0x4220008c // 3
    .equ usart1_remap, 0x42200088 // 2
    .equ i2c1_remap, 0x42200084 // 1
    .equ spi1_remap, 0x42200080 // 0
     // --------------------------------------------------------------------------------
    .equ afio_exticr1, 0x40010008 // external interrupt configuration registr 1
    .equ afio_exticr2, 0x4001000c // external interrupt configuration registr 2
    .equ afio_exticr3, 0x40010010 // external interrupt configuration registr 3
    .equ afio_exticr4, 0x40010014 // external interrupt configuration registr 3



     // ********************************************************************************
     // *   , usart,  	  	*
     // ********************************************************************************
     // usart registers
     // --------------------------------------------------------------------------------

    .equ usart_sr, 0x40013800//status registr
     // --------------------------------------------------------------------------------
    .equ usart_dr, 0x40013804//data registr
     // --------------------------------------------------------------------------------
    .equ usart_brr, 0x40013808//baud rate registr
     // --------------------------------------------------------------------------------
    .equ usart_cr1, 0x4001380c//control registr 1
     // --------------------------------------------------------------------------------
    .equ usart_cr2, 0x40013810//control registr 2
     // --------------------------------------------------------------------------------
    .equ usart_cr3, 0x40013814//control registr 3
     // --------------------------------------------------------------------------------
    .equ usart_gtpr, 0x40013818//guard time and predscale registr (hlidac a predelicka)
     // --------------------------------------------------------------------------------




     // ********************************************************************************
     // *   , flash,  	  	*
     // ********************************************************************************
     // flash registers
     // --------------------------------------------------------------------------------
    .equ flash_acr, 0x40022000//flash access control registr
     // --------------------------------------------------------------------------------


     // ********************************************************************************
     // *   , tim1,  	  	*
     // ********************************************************************************
     // tim1 registers
     // --------------------------------------------------------------------------------
    .equ tim1_cr1, 0x40012c00 // control 1
     // tim1_cr1 	bits
    .equ dir_t1, 0x42258010 // 4 bit direction
    .equ opm_t1, 0x4225800c // 3 bit one pulse mode
    .equ urs_t1, 0x42258008 // 2 bit update rest source
    .equ udis_t1, 0x42258004 // 1 bit update disable
    .equ cen_t1, 0x42258000 // 0 bit counter enable
     // -------------------------------------------------------------------------------
    .equ tim1_cr2, 0x40012c04 // control 2
     // --------------------------------------------------------------------------------
    .equ tim1_smcr, 0x40012c08 // slave mode control
     // --------------------------------------------------------------------------------
    .equ tim1_dier, 0x40012c0c //
     // tim1_dier	bits                       adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ tie_t1, 0x42258198 // 6 bit trigger interrupt enable
    .equ cc4ie_t1, 0x42258184 // 4 bit capture/compare interrupt enable
    .equ uie_t1, 0x42258180 // 0 bit update interrupt enable
     // --------------------------------------------------------------------------------
    .equ tim1_sr, 0x40012c10 // status
     // --------------------------------------------------------------------------------
    .equ tim1_egr, 0x40012c14 // event generation
     // --------------------------------------------------------------------------------
    .equ tim1_ccmr1, 0x40012c18 //
     // --------------------------------------------------------------------------------
    .equ tim1_ccmr2, 0x40012c1c//
     // --------------------------------------------------------------------------------
    .equ tim1_ccr, 0x40012c20 // capture/compare enable
     // --------------------------------------------------------------------------------
    .equ tim1_cnt, 0x40012c24 // counter
     // --------------------------------------------------------------------------------
    .equ tim1_psc, 0x40012c28 // prescaler
     // --------------------------------------------------------------------------------
    .equ tim1_arr, 0x40012c2c // auto reload
     // --------------------------------------------------------------------------------
    .equ tim1_rcr, 0x40012c30 // repetition
     // --------------------------------------------------------------------------------
    .equ tim1_ccr1, 0x40012c34 // compare/capture
     // --------------------------------------------------------------------------------
    .equ tim1_ccr2, 0x40012c38 // compare/capture
     // --------------------------------------------------------------------------------
    .equ tim1_ccr3, 0x40012c3c // compare/capture
     // --------------------------------------------------------------------------------
    .equ tim1_ccr4, 0x40012c40 // compare/capture
     // --------------------------------------------------------------------------------
    .equ tim1_bdtr, 0x40012c44 // break and dead-time
     // --------------------------------------------------------------------------------
    .equ tim1_dcr, 0x40012c48 // dma control
     // --------------------------------------------------------------------------------
    .equ tim1_dmar, 0x40012c4c // dma address for full transfer



     // ********************************************************************************
     // *   , tim2,  	  	*
     // ********************************************************************************
     // tim2 registers
     // --------------------------------------------------------------------------------
    .equ tim2_cr1, 0x40000000 // control 1
     // tim2_cr1 	bits                        adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ dir_t2, 0x42000010 // 4 bit direction
    .equ opm_t2, 0x4200000c // 3 bit one pulse mode
    .equ urs_t2, 0x42000008 // 2 bit update rest source
    .equ udis_t2, 0x42000004 // 1 bit update disable
    .equ cen_t2, 0x42000000 // 0 bit counter enable
    //--------------------------------------------------------------------------------
    .equ tim2_cr2, 0x40000004 // control 2
    //--------------------------------------------------------------------------------
    .equ tim2_smcr, 0x40000008 // slave mode control
    //--------------------------------------------------------------------------------
    .equ tim2_dier, 0x4000000c //
     // tim2_dier	bits
    .equ tie_t2, 0x42000198 // 6 bit trigger interrupt enable
    .equ cc4ie_t2, 0x42000190 // 4 bit capture/compare interrupt enable
    .equ cc3ie_t2, 0x4200018c // 3 bit capture/compare interrupt enable
    .equ cc2ie_t2, 0x42000188 // 2 bit capture/compare interrupt enable
    .equ cc1ie_t2, 0x42000184 // 1 bit capture/compare interrupt enable
    .equ uie_t2, 0x42000180 // 0 bit update interrupt enable
    //--------------------------------------------------------------------------------
    .equ tim2_sr, 0x40000010 // status
    //--------------------------------------------------------------------------------
    .equ tim2_egr, 0x40000014 // event generation
    //--------------------------------------------------------------------------------
    .equ tim2_ccmr1, 0x40000018 //
    //--------------------------------------------------------------------------------
    .equ tim2_ccmr2, 0x4000001c//
    //--------------------------------------------------------------------------------
    .equ tim2_ccer, 0x40000020 // capture/compare enable
    //--------------------------------------------------------------------------------
    .equ tim2_cnt, 0x40000024 // counter
    //--------------------------------------------------------------------------------
    .equ tim2_psc, 0x40000028 // prescaler
    //--------------------------------------------------------------------------------
    .equ tim2_arr, 0x4000002c // auto reload
    //--------------------------------------------------------------------------------
    .equ tim2_rcr, 0x40000030 // repetition
    //--------------------------------------------------------------------------------
    .equ tim2_ccr1, 0x40000034 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim2_ccr2, 0x40000038 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim2_ccr3, 0x4000003c // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim2_ccr4, 0x40000040 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim2_bdtr, 0x40000044 // break and dead-time
    //--------------------------------------------------------------------------------
    .equ tim2_dcr, 0x40000048 // dma control
    //--------------------------------------------------------------------------------
    .equ tim2_dmar, 0x4000004c // dma address for full transfer
    //--------------------------------------------------------------------------------



     // ********************************************************************************
     // *   , tim3,  	  	*
     // ********************************************************************************
     // tim3 registers
    //--------------------------------------------------------------------------------
    .equ tim3_cr1, 0x40000400 // control 1
     // tim3_cr1	bits                         adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ dir_t3, 0x42008010 // 4 bit direction
    .equ opm_t3, 0x4200800c // 3 bit one pulse mode
    .equ urs_t3, 0x42008008 // 2 bit update rest source
    .equ udis_t3, 0x42008004 // 1 bit update disable
    .equ cen_t3, 0x42008000 // 0 bit counter enable
    //--------------------------------------------------------------------------------
    .equ tim3_cr2, 0x40000404 // control 2
    //--------------------------------------------------------------------------------
    .equ tim3_smcr, 0x40000408 // slave mode control
    //--------------------------------------------------------------------------------
    .equ tim3_dier, 0x4000040c //
     // tim3_dier	bits                         adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ tie_t3, 0x42008198 // 6 bit trigger interrupt enable
    .equ cc4ie_t3, 0x42008190 // 4 bit capture/compare interrupt enable
    .equ cc3ie_t3, 0x4200018c // 3 bit capture/compare interrupt enable
    .equ cc2ie_t3, 0x42000188 // 2 bit capture/compare interrupt enable
    .equ cc1ie_t3, 0x42000184 // 1 bit capture/compare interrupt enable
    .equ uie_t3, 0x42008180 // 0 bit update interrupt enable
    //--------------------------------------------------------------------------------
    .equ tim3_sr, 0x40000410 // status
    //--------------------------------------------------------------------------------
    .equ tim3_egr, 0x40000414 // event generation
    //--------------------------------------------------------------------------------
    .equ tim3_ccmr1, 0x40000418 //
    //--------------------------------------------------------------------------------
    .equ tim3_ccmr2, 0x4000041c//
    //--------------------------------------------------------------------------------
    .equ tim3_ccer, 0x40000420 // capture/compare enable
    //--------------------------------------------------------------------------------
    .equ tim3_cnt, 0x40000424 // counter
    //--------------------------------------------------------------------------------
    .equ tim3_psc, 0x40000428 // prescaler
    //--------------------------------------------------------------------------------
    .equ tim3_arr, 0x4000042c // auto reload
    //--------------------------------------------------------------------------------
    .equ tim3_rcr, 0x40000430 // repetition
    //--------------------------------------------------------------------------------
    .equ tim3_ccr1, 0x40000434 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim3_ccr2, 0x40000438 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim3_ccr3, 0x4000043c // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim3_ccr4, 0x40000440 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim3_bdtr, 0x40000444 // break and dead-time
    //--------------------------------------------------------------------------------
    .equ tim3_dcr, 0x40000448 // dma control
    //--------------------------------------------------------------------------------
    .equ tim3_dmar, 0x4000044c // dma address for full transfer
    //--------------------------------------------------------------------------------

     // ********************************************************************************
     // *   , tim4,  	  	*
     // ********************************************************************************
     // tim4 registers
    //--------------------------------------------------------------------------------
    .equ tim4_cr1, 0x40000800 // control 1
     // tim4_cr1	bits                        adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ dir_t4, 0x42010010 // 4 bit direction
    .equ opm_t4, 0x4201000c // 3 bit one pulse mode
    .equ urs_t4, 0x42010008 // 2 bit update rest source
    .equ udis_t4, 0x42010004 // 1 bit update disable
    .equ cen_t4, 0x42010000 // 0 bit counter enable
    //--------------------------------------------------------------------------------
    .equ tim4_cr2, 0x40000804 // control 2
    //--------------------------------------------------------------------------------
    .equ tim4_smcr, 0x40000808 // slave mode control
    //--------------------------------------------------------------------------------
    .equ tim4_dier, 0x4000080c //
     // tim4_dier	bits                          adresy jednotlivych bitu pro cteni/ prip. zapis metodou bit- banding
    .equ tie_t4, 0x42010198 // 6 bit trigger interrupt enable
    .equ cc4ie_t4, 0x42010190 // 4 bit capture/compare interrupt enable
    .equ cc3ie_t4, 0x4201018c // 3 bit capture/compare interrupt enable
    .equ cc2ie_t4, 0x42010188 // 2 bit capture/compare interrupt enable
    .equ cc1ie_t4, 0x42010184 // 1 bit capture/compare interrupt enable
    .equ uie_t4, 0x42010180 // 0 bit update interrupt enable
    //--------------------------------------------------------------------------------
    .equ tim4_sr, 0x40000810 // status
    //--------------------------------------------------------------------------------
    .equ tim4_egr, 0x40000814 // event generation
    //--------------------------------------------------------------------------------
    .equ tim4_ccmr1, 0x40000818 //
    //--------------------------------------------------------------------------------
    .equ tim4_ccmr2, 0x4000081c//
    //--------------------------------------------------------------------------------
    .equ tim4_ccer, 0x40000820 // capture/compare enable
    //--------------------------------------------------------------------------------
    .equ tim4_cnt, 0x40000824 // counter
    //--------------------------------------------------------------------------------
    .equ tim4_psc, 0x40000828 // prescaler
    //--------------------------------------------------------------------------------
    .equ tim4_arr, 0x4000082c // auto reload
    //--------------------------------------------------------------------------------
    .equ tim4_rcr, 0x40000830 // repetition
    //--------------------------------------------------------------------------------
    .equ tim4_ccr1, 0x40000834 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim4_ccr2, 0x40000838 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim4_ccr3, 0x4000083c // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim4_ccr4, 0x40000840 // compare/capture
    //--------------------------------------------------------------------------------
    .equ tim4_bdtr, 0x40000844 // break and dead-time
    //--------------------------------------------------------------------------------
    .equ tim4_dcr, 0x40000848 // dma control
    //--------------------------------------------------------------------------------
    .equ tim4_dmar, 0x4000084c // dma address for full transfer
    //--------------------------------------------------------------------------------


     // ********************************************************************************
     // *   , exti,  	  	*
     // ********************************************************************************
     // exti registers
    //--------------------------------------------------------------------------------
    .equ exti_imr, 0x40010400//
    //--------------------------------------------------------------------------------
    .equ exti_emr, 0x40010404
    //--------------------------------------------------------------------------------
    .equ exti_rtsr, 0x40010408
    //--------------------------------------------------------------------------------
    .equ exti_ftsr, 0x4001040c
    //--------------------------------------------------------------------------------
    .equ exti_swier, 0x40010410
    //--------------------------------------------------------------------------------
    .equ exti_pr, 0x40010414
    //--------------------------------------------------------------------------------



     // ********************************************************************************
     // *   , nvic,  	  	*
     // ********************************************************************************
     // nvic registers
    //--------------------------------------------------------------------------------
    .equ nvic_icsr, 0xe000ed04 // interrupt control state register
    //--------------------------------------------------------------------------------
    .equ nvic_vtor, 0xe000ed08 // vector table offset register
    //--------------------------------------------------------------------------------
    .equ nvic_aircr, 0xe000ed0c // application interrupt and reset control register
    //--------------------------------------------------------------------------------
    .equ nvic_iser, 0xe000e100 // interrupt set-enable register
    //--------------------------------------------------------------------------------
    .equ nvic_icer, 0xe000e180 // interrupt clear-enable register
    //--------------------------------------------------------------------------------
    .equ nvic_ispr, 0xe000e200 // interrupt set-pending register
    //--------------------------------------------------------------------------------
    .equ nvic_icpr, 0xe000e280 // interrupt clear-pending register
    //--------------------------------------------------------------------------------
    .equ nvic_ipr, 0xe000e400 // interrupt priority register
    //--------------------------------------------------------------------------------


     // ********************************************************************************
     // *   , adc,  	  	*
     // ********************************************************************************
     // adc1 registers
    //--------------------------------------------------------------------------------
    .equ adc_sr, 0x40012400//
    //--------------------------------------------------------------------------------
    .equ adc_cr1, 0x40012404//
    //--------------------------------------------------------------------------------
    .equ adc_cr2, 0x40012408//
    //--------------------------------------------------------------------------------
    .equ adc_smpr1, 0x4001240c//
    //--------------------------------------------------------------------------------
    .equ adc_smpr2, 0x40012410//
    //--------------------------------------------------------------------------------
    .equ adc_jofr1, 0x40012414//
    //--------------------------------------------------------------------------------
    .equ adc_jofr2, 0x40012418//
    //--------------------------------------------------------------------------------
    .equ adc_jofr3, 0x4001241c//
    //--------------------------------------------------------------------------------
    .equ adc_jofr4, 0x40012420//
    //--------------------------------------------------------------------------------
    .equ adc_htr, 0x40012424//
    //--------------------------------------------------------------------------------
    .equ adc_ltr, 0x40012428//
    //--------------------------------------------------------------------------------
    .equ adc_sqr1, 0x4001242c//
    //--------------------------------------------------------------------------------
    .equ adc_sqr2, 0x40012430//
    //--------------------------------------------------------------------------------
    .equ adc_sqr3, 0x40012434//
    //--------------------------------------------------------------------------------
    .equ adc_jsqr, 0x40012438//
    //--------------------------------------------------------------------------------
    .equ adc_jdr1, 0x4001243c//
    //--------------------------------------------------------------------------------
    .equ adc_jdr2, 0x40012440//
    //--------------------------------------------------------------------------------
    .equ adc_jdr3, 0x40012444//
    //--------------------------------------------------------------------------------
    .equ adc_jdr4, 0x40012448//
    //--------------------------------------------------------------------------------
    .equ adc_dr, 0x4001244c//
    //--------------------------------------------------------------------------------

